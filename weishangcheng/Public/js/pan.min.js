// 阿里分享接口
// author: 杨东垒
// 分享接口调用方式
/**
 * require(['alipan'],function(aliShare){
 	if(aliShare.isAvaliable){
		ali.aliShare("分享内容",[图片数组]);
	}else{
		//请在其他平台打开 不是财源宝环境
	}
})
 */
//点击分享
//$("body").on("click","#share_submit",function(){
//	var arr = [];
//	for(var i = 0; i < $(".item_photo_container ul li .dh_on").length; i++){
//		arr.push($(".item_photo_container ul li .dh_on").siblings("img").eq(i).attr('src'));
//	}
//	require(['alipan'],function(ali){
//	 	if(ali.isAvaliable){
//			ali.aliShare(bt_title,arr);
//		}else{
//			console.log(ali.isAvaliable)
//		}
//	})
//	console.log(arr,bt_title);
//})

function share_method(){
	var arr = [];
	for(var i = 0; i < $(".item_photo_container ul li .dh_on").length; i++){
		arr.push($(".item_photo_container ul li .dh_on").siblings("img").eq(i).attr('src'));
	}
	require(['alipan'],function(ali){
	 	if(ali.isAvaliable){
			window.WindVane.call("AliShare","distribute",{content:bt_title,feedId:1,feedType:0,picPath:arr},function(e){
				$(".textarea_border textarea").val("");
				$(".item_photo_container ul li").remove();
				$(".cyb_fx_box").hide();
			},function(e){
				$(".textarea_border textarea").val("");
				$(".item_photo_container ul li").remove();
				$(".cyb_fx_box").hide();	
			});
			return false;
		}else{
			console.log(ali.isAvaliable);
			return false;
		}
	})
 console.log(arr,bt_title);
}

define('alipan',function(){
	var ali_ydl = {
		isAvaliable:true,
		aliShare:function(content,picPath){
//			console.log("content",content);
//			console.log("picPath",picPath);
			window.WindVane.call("AliShare","distribute",{content:content,feedId:1,feedType:0,picPath:picPath},null,null);
			
//			console.log(content)
		}
		
	}
	!function(e, t) {
	    function n(e, t) {
	        e = e.toString().split("."),
	        t = t.toString().split(".");
	        for (var n = 0; n < e.length || n < t.length; n++) {
	            var r = parseInt(e[n], 10)
	              , i = parseInt(t[n], 10);
	            if (window.isNaN(r) && (r = 0),
	            window.isNaN(i) && (i = 0),
	            r < i)
	                return -1;
	            if (r > i)
	                return 1
	        }
	        return 0
	    }
	    var r = e.Promise
	      , i = e.document
	      , a = e.navigator.userAgent
	      , o = /Windows\sPhone\s(?:OS\s)?[\d\.]+/i.test(a) || /Windows\sNT\s[\d\.]+/i.test(a)
	      , s = o && e.WindVane_Win_Private && e.WindVane_Win_Private.call
	      , u = /iPhone|iPad|iPod/i.test(a)
	      , l = /Android/i.test(a)
	      , c = a.match(/WindVane[\/\s](\d+[._]\d+[._]\d+)/)
	      , f = Object.prototype.hasOwnProperty
	      , d = t.windvane = e.WindVane || (e.WindVane = {})
	      , h = (e.WindVane_Native,
	    Math.floor(65536 * Math.random()))
	      , p = 1
	      , v = []
	      , m = 3
	      , _ = "hybrid"
	      , g = "wv_hybrid"
	      , N = "iframe_"
	      , w = "param_"
	      , E = "chunk_"
	      , y = 6e5
	      , P = 6e5
	      , b = 6e4;
	    c = c ? (c[1] || "0.0.0").replace(/\_/g, ".") : "0.0.0";
	    var O = {
	        "isAvailable": 1 === n(c, "0"),
	        "call": function(e, t, n, i, a, o) {
	            var s, u;
	            "number" == typeof arguments[arguments.length - 1] && (o = arguments[arguments.length - 1]),
	            "function" != typeof i && (i = null),
	            "function" != typeof a && (a = null),
	            r && (u = {},
	            u.promise = new r(function(e, t) {
	                u.resolve = e,
	                u.reject = t
	            }
	            )),
	            s = A.getSid();
	            var l = {
	                "success": i,
	                "failure": a,
	                "deferred": u
	            };
	            if (o > 0 && (l.timeout = setTimeout(function() {
	                O.onFailure(s, {
	                    "ret": "HY_TIMEOUT"
	                })
	            }, o)),
	            A.registerCall(s, l),
	            A.registerGC(s, o),
	            O.isAvailable ? A.callMethod(e, t, n, s) : O.onFailure(s, {
	                "ret": "HY_NOT_IN_WINDVANE"
	            }),
	            u)
	                return u.promise
	        },
	        "fireEvent": function(e, t, n) {
	            var r = i.createEvent("HTMLEvents");
	            r.initEvent(e, !1, !0),
	            r.param = A.parseData(t || A.getData(n)),
	            i.dispatchEvent(r)
	        },
	        "getParam": function(e) {
	            return A.getParam(e)
	        },
	        "setData": function(e, t) {
	            A.setData(e, t)
	        },
	        "onSuccess": function(e, t) {
	            A.onComplete(e, t, "success")
	        },
	        "onFailure": function(e, t) {
	            A.onComplete(e, t, "failure")
	        }
	    }
	      , A = {
	        "params": {},
	        "chunks": {},
	        "calls": {},
	        "getSid": function() {
	            return (h + p++) % 65536 + ""
	        },
	        "buildParam": function(e) {
	            return e && "object" == typeof e ? JSON.stringify(e) : e || ""
	        },
	        "getParam": function(e) {
	            return this.params[w + e] || ""
	        },
	        "setParam": function(e, t) {
	            this.params[w + e] = t
	        },
	        "parseData": function(e) {
	            var t;
	            if (e && "string" == typeof e)
	                try {
	                    t = JSON.parse(e)
	                } catch (n) {
	                    t = {
	                        "ret": ["WV_ERR::PARAM_PARSE_ERROR"]
	                    }
	                }
	            else
	                t = e || {};
	            return t
	        },
	        "setData": function() {
	            this.chunks[E + sid] = this.chunks[E + sid] || [],
	            this.chunks[E + sid].push(chunk)
	        },
	        "getData": function(e) {
	            return this.chunks[E + e] ? this.chunks[E + e].join("") : ""
	        },
	        "registerCall": function(e, t) {
	            this.calls[e] = t
	        },
	        "unregisterCall": function(e) {
	            var t = {};
	            return this.calls[e] && (t = this.calls[e],
	            delete this.calls[e]),
	            t
	        },
	        "useIframe": function(e, t) {
	            var n = N + e
	              , r = v.pop();
	            r || (r = i.createElement("iframe"),
	            r.setAttribute("frameborder", "0"),
	            r.style.cssText = "width:0;height:0;border:0;display:none;"),
	            r.setAttribute("id", n),
	            r.setAttribute("src", t),
	            r.parentNode || setTimeout(function() {
	                i.body.appendChild(r)
	            }, 5)
	        },
	        "retrieveIframe": function(e) {
	            var t = N + e
	              , n = i.querySelector("#" + t);
	            v.length >= m ? i.body.removeChild(n) : v.indexOf(n) < 0 && v.push(n)
	        },
	        "callMethod": function(t, n, r, i) {
	            if (r = A.buildParam(r),
	            o)
	                s ? e.WindVane_Win_Private.call(t, n, i, r) : this.onComplete(i, {
	                    "ret": "HY_NO_HANDLER_ON_WP"
	                }, "failure");
	            else {
	                var a = _ + "://" + t + ":" + i + "/" + n + "?" + r;
	                if (u)
	                    this.setParam(i, r),
	                    this.useIframe(i, a);
	                else if (l) {
	                    var c = g + ":";
	                    window.prompt(a, c)
	                } else
	                    this.onComplete(i, {
	                        "ret": "HY_NOT_SUPPORT_DEVICE"
	                    }, "failure")
	            }
	        },
	        "registerGC": function(e, t) {
	            var n = this
	              , r = Math.max(t || 0, y)
	              , i = Math.max(t || 0, b)
	              , a = Math.max(t || 0, P);
	            setTimeout(function() {
	                n.unregisterCall(e)
	            }, r),
	            u ? setTimeout(function() {
	                n.params[w + e] && delete n.params[w + e]
	            }, i) : l && setTimeout(function() {
	                n.chunks[E + e] && delete n.chunks[E + e]
	            }, a)
	        },
	        "onComplete": function(e, t, n) {
	            var r = this.unregisterCall(e)
	              , i = r.success
	              , a = r.failure
	              , o = r.deferred
	              , s = r.timeout;
	            s && clearTimeout(s),
	            t = t ? t : this.getData(e),
	            t = this.parseData(t);
	            var c = t.ret;
	            "string" == typeof c && (t = t.value || t,
	            t.ret || (t.ret = [c])),
	            "success" === n ? (i && i(t),
	            o && o.resolve(t)) : "failure" === n && (a && a(t),
	            o && o.reject(t)),
	            u ? (this.retrieveIframe(e),
	            this.params[w + e] && delete this.params[w + e]) : l && this.chunks[E + e] && delete this.chunks[E + e]
	        }
	    };
	    for (var S in O)
	        f.call(d, S) || (d[S] = O[S])
	}(window, window.lib || (window.lib = {})),
	!function(e) {
	    function t(e) {
	        var t, n, r;
	        return t = d.exec(e) || [],
	        n = t[1],
	        r = (t[2] || "").split(".").sort(),
	        [n, r]
	    }
	    var n = e.navigator.userAgent
	      , r = {}
	      , i = /__debugAPI__=1/.test(location.href)
	      , a = function(e) {
	        return "string" == typeof e
	    }
	      , o = (Array.isArray || function(e) {
	        return "[object Array]" === Object.prototype.toString.call(e)
	    }
	    ,
	    function(e) {
	        return "[object Object]" === Object.prototype.toString.call(e)
	    }
	    )
	      , s = {
	        "HY_SUCCESS": 0,
	        "HY_NO_HANDLER": 1,
	        "HY_PARAM_ERR": 2,
	        "HY_UNKNOWN_ERR": 3,
	        "HY_NO_PERMISSION": 4,
	        "HY_TIMEOUT": 5,
	        "HY_FAILED": 6,
	        "HY_CLOSED": 7,
	        "HY_EXCEPTION": 1001
	    }
	      , u = function(e) {
	        return e = e || {},
	        null !== e.data && void 0 !== e.data || (e.data = {}),
	        i && alert(JSON && JSON.stringify(e)),
	        e
	    }
	      , l = function(e, t) {
	        return function(n) {
	            n = n || {},
	            n = u(n),
	            e && e(n),
	            t && t(n)
	        }
	    }
	      , c = function(e, t) {
	        return function(n) {
	            var r = 6
	              , i = a(n) ? n : n.ret;
	            n && s[i] > 0 && (r = s[i]);
	            var l = o(n) ? n : {};
	            l = u(l),
	            e && e(l),
	            t && t(l)
	        }
	    }; 
	    r.call = function(t, n, r, a, o) {
	        "AliMtop.request" === t && (t = "MtopWVPlugin.send");
	        var s = t.split(".");
	        if (2 !== s.length)
	            throw new Error("apiName: \u8bf7\u4f7f\u7528 className.methodName \u7684\u5f62\u5f0f\u8c03\u7528");
	        if (arguments.length < 2 || "function" == typeof n)
	            throw new Error("\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570: params");
	        if ("number" == typeof arguments[arguments.length - 1] && (o = arguments[arguments.length - 1]),
	        "function" != typeof r && (r = null),
	        "function" != typeof a && (a = null),
	        i) {
	            var u = {
	                "api": t,
	                "params": n,
	                "successCallback": r,
	                "failureCallback": a,
	                "timeout": o
	            };
	            alert(JSON && JSON.stringify(u))
	        }
	        return e.WindVane.call(s[0], s[1], n, l(r), c(a), o)
	    }
	    ;
	    var f = {}
	      , d = /^([^.]*)(?:\.(.+)|)/
	      , h = "__panEventId__"
	      , p = "__EVENT_LIST__";
	    if (r.guid = 1,
	    r.event = {
	        "on": function(e, n, i) {
	            if ("string" != typeof e)
	                throw new Error("eventName\u4e8b\u4ef6\u540d\u5fc5\u987b\u662f\u5b57\u7b26\u4e32");
	            if ("function" != typeof n)
	                throw new Error("callback\u5fc5\u987b\u662f\u51fd\u6570");
	            if (n._panNativeEventGuid)
	                throw new Error("\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u4e0d\u80fd\u7ed1\u5b9a\u591a\u6b21");
	            var a = t(e)
	              , o = a[0];
	            f[o] || (f[o] = {
	                "events": [],
	                "callback": function() {}
	            });
	            var s = f[o].events;
	            if (n[h] || (n[h] = r.guid++),
	            i && (n.__onceFlag__ = !0),
	            0 === s.length) {
	                var u = function(e) {
	                    for (var t = f[o].events, n = 0, r = t.length; n < r; n++)
	                        t[n].handler(e.param, e),
	                        t[n].__onceFlag__ && delete t[n]
	                };
	                document.addEventListener(o, u, !1)
	            }
	            s.push({
	                "handler": n,
	                "namespace": a[1]
	            })
	        },
	        "off": function(e, n) {
	            if ("string" != typeof e)
	                throw new Error("eventNameWithNamespace \u4e8b\u4ef6\u540d\u5fc5\u987b\u662f\u5b57\u7b26\u4e32");
	            var r = t(e)
	              , i = r[0]
	              , a = r[1];
	            if (f[i] && (!n || n[h])) {
	                for (var o, s, u = f[i].events, l = u.length; l--; )
	                    o = u[l],
	                    s = o.handler,
	                    s && (s && s[h] !== n[h] || a !== o.namespace || u.splice(l, 1));
	                if (n) {
	                    for (var c = 0, d = u.length; c < d; c++)
	                        if (u[c][h] === n[h]) {
	                            delete u[c];
	                            break
	                        }
	                } else
	                    a === p ? delete f[i] : delete f[i].eventsNamespaceMap[a]
	            }
	        },
	        "once": function(e, t) {
	            r.event.on(e, t, !0)
	        }
	    },
	    "undefined" == typeof e.Pan ? e.Pan = r : (console.error("window.Pan\u5df2\u5b58\u5728\uff0c\u8bf7\u4f7f\u7528 PanPan"),
	    e.PanPan = r)){};
		if(/AliApp/.test(n)){
			ali_ydl.isAvaliable = true;
			var versionReg = /AliApp\(microsupply\/(\d+)\.(\d+)\.(\d+)/;
			var versionArr = versionReg.exec(n);
			var flag1 = versionArr[1];
			var flag2 = versionArr[2];
			var flag3 = versionArr[3];
			if(flag1 < 1){
				ali_ydl.isAvaliable = false;
			}else if(flag2 < 9){
				ali_ydl.isAvaliable = false;
			}else if(flag3 < 3){
				ali_ydl.isAvaliable = false;
			}
		}else{
			ali_ydl.isAvaliable = false;
		}
	}(window,ali_ydl);
	return ali_ydl;
}(window));
